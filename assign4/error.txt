In file included from /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.8/bits/allocator.h:46,
                 from /usr/include/c++/4.8/string:41,
                 from /usr/include/c++/4.8/bits/locale_classes.h:40,
                 from /usr/include/c++/4.8/bits/ios_base.h:41,
                 from /usr/include/c++/4.8/ios:42,
                 from /usr/include/c++/4.8/ostream:38,
                 from /usr/include/c++/4.8/iostream:39,
                 from test.cpp:3:
/usr/include/c++/4.8/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = persistent_vector<int>::leaf_node; _Args = {const int&, const int&}; _Tp = persistent_vector<int>::leaf_node]’:
/usr/include/c++/4.8/bits/alloc_traits.h:254:4:   required from ‘static typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type std::allocator_traits<_Alloc>::_S_construct(_Alloc&, _Tp*, _Args&& ...) [with _Tp = persistent_vector<int>::leaf_node; _Args = {const int&, const int&}; _Alloc = std::allocator<persistent_vector<int>::leaf_node>; typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type = void]’
/usr/include/c++/4.8/bits/alloc_traits.h:393:57:   required from ‘static decltype (_S_construct(__a, __p, (forward<_Args>)(std::allocator_traits::construct::__args)...)) std::allocator_traits<_Alloc>::construct(_Alloc&, _Tp*, _Args&& ...) [with _Tp = persistent_vector<int>::leaf_node; _Args = {const int&, const int&}; _Alloc = std::allocator<persistent_vector<int>::leaf_node>; decltype (_S_construct(__a, __p, (forward<_Args>)(std::allocator_traits::construct::__args)...)) = <type error>]’
/usr/include/c++/4.8/bits/shared_ptr_base.h:400:38:   required from ‘std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const int&, const int&}; _Tp = persistent_vector<int>::leaf_node; _Alloc = std::allocator<persistent_vector<int>::leaf_node>; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2u]’
/usr/include/c++/4.8/ext/new_allocator.h:120:4:   required from ‘void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::_Sp_counted_ptr_inplace<persistent_vector<int>::leaf_node, std::allocator<persistent_vector<int>::leaf_node>, (__gnu_cxx::_Lock_policy)2u>; _Args = {const std::allocator<persistent_vector<int>::leaf_node>, const int&, const int&}; _Tp = std::_Sp_counted_ptr_inplace<persistent_vector<int>::leaf_node, std::allocator<persistent_vector<int>::leaf_node>, (__gnu_cxx::_Lock_policy)2u>]’
/usr/include/c++/4.8/bits/alloc_traits.h:254:4:   required from ‘static typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type std::allocator_traits<_Alloc>::_S_construct(_Alloc&, _Tp*, _Args&& ...) [with _Tp = std::_Sp_counted_ptr_inplace<persistent_vector<int>::leaf_node, std::allocator<persistent_vector<int>::leaf_node>, (__gnu_cxx::_Lock_policy)2u>; _Args = {const std::allocator<persistent_vector<int>::leaf_node>, const int&, const int&}; _Alloc = std::allocator<std::_Sp_counted_ptr_inplace<persistent_vector<int>::leaf_node, std::allocator<persistent_vector<int>::leaf_node>, (__gnu_cxx::_Lock_policy)2u> >; typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type = void]’
/usr/include/c++/4.8/bits/alloc_traits.h:393:57:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/c++/4.8/bits/shared_ptr.h:316:64:   required from ‘std::shared_ptr<_Tp>::shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<persistent_vector<int>::leaf_node>; _Args = {const int&, const int&}; _Tp = persistent_vector<int>::leaf_node]’
/usr/include/c++/4.8/bits/shared_ptr.h:598:39:   required from ‘std::shared_ptr<_Tp1> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = persistent_vector<int>::leaf_node; _Alloc = std::allocator<persistent_vector<int>::leaf_node>; _Args = {const int&, const int&}]’
/usr/include/c++/4.8/bits/shared_ptr.h:614:42:   required from ‘std::shared_ptr<_Tp1> std::make_shared(_Args&& ...) [with _Tp = persistent_vector<int>::leaf_node; _Args = {const int&, const int&}]’
persistent_vector.h:94:72:   required from ‘std::vector<std::shared_ptr<persistent_vector<T>::node> > persistent_vector<T>::make_pairs(const vector_type&) [with node_type = persistent_vector<int>::leaf_node; vector_type = std::vector<int>; T = int]’
persistent_vector.h:169:37:   required from ‘persistent_vector<T>::persistent_vector(const std::vector<T>&) [with T = int]’
test.cpp:9:32:   required from here
/usr/include/c++/4.8/ext/new_allocator.h:120:4: error: cannot allocate an object of abstract type ‘persistent_vector<int>::leaf_node’
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^
In file included from test.cpp:5:0:
persistent_vector.h:24:11: note:   because the following virtual functions are pure within ‘persistent_vector<int>::leaf_node’:
     class leaf_node : public node { 
           ^
persistent_vector.h:18:39: note: 	std::shared_ptr<persistent_vector<T>::node> persistent_vector<T>::node::replace(size_t, size_t, const T&) const [with T = int; size_t = long unsigned int]
         virtual std::shared_ptr<node> replace(size_t height, size_t index, const T& value) const = 0;
                                       ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.8/bits/allocator.h:46,
                 from /usr/include/c++/4.8/string:41,
                 from /usr/include/c++/4.8/bits/locale_classes.h:40,
                 from /usr/include/c++/4.8/bits/ios_base.h:41,
                 from /usr/include/c++/4.8/ios:42,
                 from /usr/include/c++/4.8/ostream:38,
                 from /usr/include/c++/4.8/iostream:39,
                 from test.cpp:3:
/usr/include/c++/4.8/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = persistent_vector<int>::leaf_node; _Args = {const int&}; _Tp = persistent_vector<int>::leaf_node]’:
/usr/include/c++/4.8/bits/alloc_traits.h:254:4:   required from ‘static typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type std::allocator_traits<_Alloc>::_S_construct(_Alloc&, _Tp*, _Args&& ...) [with _Tp = persistent_vector<int>::leaf_node; _Args = {const int&}; _Alloc = std::allocator<persistent_vector<int>::leaf_node>; typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type = void]’
/usr/include/c++/4.8/bits/alloc_traits.h:393:57:   required from ‘static decltype (_S_construct(__a, __p, (forward<_Args>)(std::allocator_traits::construct::__args)...)) std::allocator_traits<_Alloc>::construct(_Alloc&, _Tp*, _Args&& ...) [with _Tp = persistent_vector<int>::leaf_node; _Args = {const int&}; _Alloc = std::allocator<persistent_vector<int>::leaf_node>; decltype (_S_construct(__a, __p, (forward<_Args>)(std::allocator_traits::construct::__args)...)) = <type error>]’
/usr/include/c++/4.8/bits/shared_ptr_base.h:400:38:   required from ‘std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const int&}; _Tp = persistent_vector<int>::leaf_node; _Alloc = std::allocator<persistent_vector<int>::leaf_node>; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2u]’
/usr/include/c++/4.8/ext/new_allocator.h:120:4:   required from ‘void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::_Sp_counted_ptr_inplace<persistent_vector<int>::leaf_node, std::allocator<persistent_vector<int>::leaf_node>, (__gnu_cxx::_Lock_policy)2u>; _Args = {const std::allocator<persistent_vector<int>::leaf_node>, const int&}; _Tp = std::_Sp_counted_ptr_inplace<persistent_vector<int>::leaf_node, std::allocator<persistent_vector<int>::leaf_node>, (__gnu_cxx::_Lock_policy)2u>]’
/usr/include/c++/4.8/bits/alloc_traits.h:254:4:   required from ‘static typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type std::allocator_traits<_Alloc>::_S_construct(_Alloc&, _Tp*, _Args&& ...) [with _Tp = std::_Sp_counted_ptr_inplace<persistent_vector<int>::leaf_node, std::allocator<persistent_vector<int>::leaf_node>, (__gnu_cxx::_Lock_policy)2u>; _Args = {const std::allocator<persistent_vector<int>::leaf_node>, const int&}; _Alloc = std::allocator<std::_Sp_counted_ptr_inplace<persistent_vector<int>::leaf_node, std::allocator<persistent_vector<int>::leaf_node>, (__gnu_cxx::_Lock_policy)2u> >; typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type = void]’
/usr/include/c++/4.8/bits/alloc_traits.h:393:57:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/c++/4.8/bits/shared_ptr.h:316:64:   required from ‘std::shared_ptr<_Tp>::shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<persistent_vector<int>::leaf_node>; _Args = {const int&}; _Tp = persistent_vector<int>::leaf_node]’
/usr/include/c++/4.8/bits/shared_ptr.h:598:39:   required from ‘std::shared_ptr<_Tp1> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = persistent_vector<int>::leaf_node; _Alloc = std::allocator<persistent_vector<int>::leaf_node>; _Args = {const int&}]’
/usr/include/c++/4.8/bits/shared_ptr.h:614:42:   required from ‘std::shared_ptr<_Tp1> std::make_shared(_Args&& ...) [with _Tp = persistent_vector<int>::leaf_node; _Args = {const int&}]’
persistent_vector.h:95:66:   required from ‘std::vector<std::shared_ptr<persistent_vector<T>::node> > persistent_vector<T>::make_pairs(const vector_type&) [with node_type = persistent_vector<int>::leaf_node; vector_type = std::vector<int>; T = int]’
persistent_vector.h:169:37:   required from ‘persistent_vector<T>::persistent_vector(const std::vector<T>&) [with T = int]’
test.cpp:9:32:   required from here
/usr/include/c++/4.8/ext/new_allocator.h:120:4: error: cannot allocate an object of abstract type ‘persistent_vector<int>::leaf_node’
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^
In file included from test.cpp:5:0:
persistent_vector.h:24:11: note:   since type ‘persistent_vector<int>::leaf_node’ has pure virtual functions
     class leaf_node : public node { 
           ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.8/bits/allocator.h:46,
                 from /usr/include/c++/4.8/string:41,
                 from /usr/include/c++/4.8/bits/locale_classes.h:40,
                 from /usr/include/c++/4.8/bits/ios_base.h:41,
                 from /usr/include/c++/4.8/ios:42,
                 from /usr/include/c++/4.8/ostream:38,
                 from /usr/include/c++/4.8/iostream:39,
                 from test.cpp:3:
/usr/include/c++/4.8/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = persistent_vector<int>::internal_node; _Args = {const std::shared_ptr<persistent_vector<int>::node>&, const std::shared_ptr<persistent_vector<int>::node>&}; _Tp = persistent_vector<int>::internal_node]’:
/usr/include/c++/4.8/bits/alloc_traits.h:254:4:   required from ‘static typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type std::allocator_traits<_Alloc>::_S_construct(_Alloc&, _Tp*, _Args&& ...) [with _Tp = persistent_vector<int>::internal_node; _Args = {const std::shared_ptr<persistent_vector<int>::node>&, const std::shared_ptr<persistent_vector<int>::node>&}; _Alloc = std::allocator<persistent_vector<int>::internal_node>; typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type = void]’
/usr/include/c++/4.8/bits/alloc_traits.h:393:57:   required from ‘static decltype (_S_construct(__a, __p, (forward<_Args>)(std::allocator_traits::construct::__args)...)) std::allocator_traits<_Alloc>::construct(_Alloc&, _Tp*, _Args&& ...) [with _Tp = persistent_vector<int>::internal_node; _Args = {const std::shared_ptr<persistent_vector<int>::node>&, const std::shared_ptr<persistent_vector<int>::node>&}; _Alloc = std::allocator<persistent_vector<int>::internal_node>; decltype (_S_construct(__a, __p, (forward<_Args>)(std::allocator_traits::construct::__args)...)) = <type error>]’
/usr/include/c++/4.8/bits/shared_ptr_base.h:400:38:   required from ‘std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const std::shared_ptr<persistent_vector<int>::node>&, const std::shared_ptr<persistent_vector<int>::node>&}; _Tp = persistent_vector<int>::internal_node; _Alloc = std::allocator<persistent_vector<int>::internal_node>; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2u]’
/usr/include/c++/4.8/ext/new_allocator.h:120:4:   required from ‘void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::_Sp_counted_ptr_inplace<persistent_vector<int>::internal_node, std::allocator<persistent_vector<int>::internal_node>, (__gnu_cxx::_Lock_policy)2u>; _Args = {const std::allocator<persistent_vector<int>::internal_node>, const std::shared_ptr<persistent_vector<int>::node>&, const std::shared_ptr<persistent_vector<int>::node>&}; _Tp = std::_Sp_counted_ptr_inplace<persistent_vector<int>::internal_node, std::allocator<persistent_vector<int>::internal_node>, (__gnu_cxx::_Lock_policy)2u>]’
/usr/include/c++/4.8/bits/alloc_traits.h:254:4:   required from ‘static typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type std::allocator_traits<_Alloc>::_S_construct(_Alloc&, _Tp*, _Args&& ...) [with _Tp = std::_Sp_counted_ptr_inplace<persistent_vector<int>::internal_node, std::allocator<persistent_vector<int>::internal_node>, (__gnu_cxx::_Lock_policy)2u>; _Args = {const std::allocator<persistent_vector<int>::internal_node>, const std::shared_ptr<persistent_vector<int>::node>&, const std::shared_ptr<persistent_vector<int>::node>&}; _Alloc = std::allocator<std::_Sp_counted_ptr_inplace<persistent_vector<int>::internal_node, std::allocator<persistent_vector<int>::internal_node>, (__gnu_cxx::_Lock_policy)2u> >; typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type = void]’
/usr/include/c++/4.8/bits/alloc_traits.h:393:57:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/c++/4.8/bits/shared_ptr.h:598:39:   required from ‘std::shared_ptr<_Tp1> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = persistent_vector<int>::internal_node; _Alloc = std::allocator<persistent_vector<int>::internal_node>; _Args = {const std::shared_ptr<persistent_vector<int>::node>&, const std::shared_ptr<persistent_vector<int>::node>&}]’
/usr/include/c++/4.8/bits/shared_ptr.h:614:42:   required from ‘std::shared_ptr<_Tp1> std::make_shared(_Args&& ...) [with _Tp = persistent_vector<int>::internal_node; _Args = {const std::shared_ptr<persistent_vector<int>::node>&, const std::shared_ptr<persistent_vector<int>::node>&}]’
persistent_vector.h:94:72:   required from ‘std::vector<std::shared_ptr<persistent_vector<T>::node> > persistent_vector<T>::make_pairs(const vector_type&) [with node_type = persistent_vector<int>::internal_node; vector_type = std::vector<std::shared_ptr<persistent_vector<int>::node>, std::allocator<std::shared_ptr<persistent_vector<int>::node> > >; T = int]’
persistent_vector.h:104:46:   required from ‘persistent_vector<T>::node_ptr persistent_vector<T>::build_tree(const std::vector<std::shared_ptr<persistent_vector<T>::node> >&) [with T = int; persistent_vector<T>::node_ptr = std::shared_ptr<persistent_vector<int>::node>]’
persistent_vector.h:169:51:   required from ‘persistent_vector<T>::persistent_vector(const std::vector<T>&) [with T = int]’
test.cpp:9:32:   required from here
/usr/include/c++/4.8/ext/new_allocator.h:120:4: error: cannot allocate an object of abstract type ‘persistent_vector<int>::internal_node’
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^
In file included from test.cpp:5:0:
persistent_vector.h:57:11: note:   because the following virtual functions are pure within ‘persistent_vector<int>::internal_node’:
     class internal_node : public node { 
           ^
persistent_vector.h:18:39: note: 	std::shared_ptr<persistent_vector<T>::node> persistent_vector<T>::node::replace(size_t, size_t, const T&) const [with T = int; size_t = long unsigned int]
         virtual std::shared_ptr<node> replace(size_t height, size_t index, const T& value) const = 0;
                                       ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.8/bits/allocator.h:46,
                 from /usr/include/c++/4.8/string:41,
                 from /usr/include/c++/4.8/bits/locale_classes.h:40,
                 from /usr/include/c++/4.8/bits/ios_base.h:41,
                 from /usr/include/c++/4.8/ios:42,
                 from /usr/include/c++/4.8/ostream:38,
                 from /usr/include/c++/4.8/iostream:39,
                 from test.cpp:3:
/usr/include/c++/4.8/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = persistent_vector<int>::internal_node; _Args = {const std::shared_ptr<persistent_vector<int>::node>&}; _Tp = persistent_vector<int>::internal_node]’:
/usr/include/c++/4.8/bits/alloc_traits.h:254:4:   required from ‘static typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type std::allocator_traits<_Alloc>::_S_construct(_Alloc&, _Tp*, _Args&& ...) [with _Tp = persistent_vector<int>::internal_node; _Args = {const std::shared_ptr<persistent_vector<int>::node>&}; _Alloc = std::allocator<persistent_vector<int>::internal_node>; typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type = void]’
/usr/include/c++/4.8/bits/alloc_traits.h:393:57:   required from ‘static decltype (_S_construct(__a, __p, (forward<_Args>)(std::allocator_traits::construct::__args)...)) std::allocator_traits<_Alloc>::construct(_Alloc&, _Tp*, _Args&& ...) [with _Tp = persistent_vector<int>::internal_node; _Args = {const std::shared_ptr<persistent_vector<int>::node>&}; _Alloc = std::allocator<persistent_vector<int>::internal_node>; decltype (_S_construct(__a, __p, (forward<_Args>)(std::allocator_traits::construct::__args)...)) = <type error>]’
/usr/include/c++/4.8/bits/shared_ptr_base.h:400:38:   required from ‘std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const std::shared_ptr<persistent_vector<int>::node>&}; _Tp = persistent_vector<int>::internal_node; _Alloc = std::allocator<persistent_vector<int>::internal_node>; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2u]’
/usr/include/c++/4.8/ext/new_allocator.h:120:4:   required from ‘void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::_Sp_counted_ptr_inplace<persistent_vector<int>::internal_node, std::allocator<persistent_vector<int>::internal_node>, (__gnu_cxx::_Lock_policy)2u>; _Args = {const std::allocator<persistent_vector<int>::internal_node>, const std::shared_ptr<persistent_vector<int>::node>&}; _Tp = std::_Sp_counted_ptr_inplace<persistent_vector<int>::internal_node, std::allocator<persistent_vector<int>::internal_node>, (__gnu_cxx::_Lock_policy)2u>]’
/usr/include/c++/4.8/bits/alloc_traits.h:254:4:   required from ‘static typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type std::allocator_traits<_Alloc>::_S_construct(_Alloc&, _Tp*, _Args&& ...) [with _Tp = std::_Sp_counted_ptr_inplace<persistent_vector<int>::internal_node, std::allocator<persistent_vector<int>::internal_node>, (__gnu_cxx::_Lock_policy)2u>; _Args = {const std::allocator<persistent_vector<int>::internal_node>, const std::shared_ptr<persistent_vector<int>::node>&}; _Alloc = std::allocator<std::_Sp_counted_ptr_inplace<persistent_vector<int>::internal_node, std::allocator<persistent_vector<int>::internal_node>, (__gnu_cxx::_Lock_policy)2u> >; typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type = void]’
/usr/include/c++/4.8/bits/alloc_traits.h:393:57:   [ skipping 4 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/c++/4.8/bits/shared_ptr.h:598:39:   required from ‘std::shared_ptr<_Tp1> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = persistent_vector<int>::internal_node; _Alloc = std::allocator<persistent_vector<int>::internal_node>; _Args = {const std::shared_ptr<persistent_vector<int>::node>&}]’
/usr/include/c++/4.8/bits/shared_ptr.h:614:42:   required from ‘std::shared_ptr<_Tp1> std::make_shared(_Args&& ...) [with _Tp = persistent_vector<int>::internal_node; _Args = {const std::shared_ptr<persistent_vector<int>::node>&}]’
persistent_vector.h:95:66:   required from ‘std::vector<std::shared_ptr<persistent_vector<T>::node> > persistent_vector<T>::make_pairs(const vector_type&) [with node_type = persistent_vector<int>::internal_node; vector_type = std::vector<std::shared_ptr<persistent_vector<int>::node>, std::allocator<std::shared_ptr<persistent_vector<int>::node> > >; T = int]’
persistent_vector.h:104:46:   required from ‘persistent_vector<T>::node_ptr persistent_vector<T>::build_tree(const std::vector<std::shared_ptr<persistent_vector<T>::node> >&) [with T = int; persistent_vector<T>::node_ptr = std::shared_ptr<persistent_vector<int>::node>]’
persistent_vector.h:169:51:   required from ‘persistent_vector<T>::persistent_vector(const std::vector<T>&) [with T = int]’
test.cpp:9:32:   required from here
/usr/include/c++/4.8/ext/new_allocator.h:120:4: error: cannot allocate an object of abstract type ‘persistent_vector<int>::internal_node’
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^
In file included from test.cpp:5:0:
persistent_vector.h:57:11: note:   since type ‘persistent_vector<int>::internal_node’ has pure virtual functions
     class internal_node : public node { 
           ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.8/bits/allocator.h:46,
                 from /usr/include/c++/4.8/string:41,
                 from /usr/include/c++/4.8/bits/locale_classes.h:40,
                 from /usr/include/c++/4.8/bits/ios_base.h:41,
                 from /usr/include/c++/4.8/ios:42,
                 from /usr/include/c++/4.8/ostream:38,
                 from /usr/include/c++/4.8/iostream:39,
                 from test.cpp:3:
/usr/include/c++/4.8/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = persistent_vector<int>::internal_node; _Args = {const std::shared_ptr<persistent_vector<int>::node>&, std::shared_ptr<persistent_vector<int>::node>}; _Tp = persistent_vector<int>::internal_node]’:
/usr/include/c++/4.8/bits/alloc_traits.h:254:4:   required from ‘static typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type std::allocator_traits<_Alloc>::_S_construct(_Alloc&, _Tp*, _Args&& ...) [with _Tp = persistent_vector<int>::internal_node; _Args = {const std::shared_ptr<persistent_vector<int>::node>&, std::shared_ptr<persistent_vector<int>::node>}; _Alloc = std::allocator<persistent_vector<int>::internal_node>; typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type = void]’
/usr/include/c++/4.8/bits/alloc_traits.h:393:57:   required from ‘static decltype (_S_construct(__a, __p, (forward<_Args>)(std::allocator_traits::construct::__args)...)) std::allocator_traits<_Alloc>::construct(_Alloc&, _Tp*, _Args&& ...) [with _Tp = persistent_vector<int>::internal_node; _Args = {const std::shared_ptr<persistent_vector<int>::node>&, std::shared_ptr<persistent_vector<int>::node>}; _Alloc = std::allocator<persistent_vector<int>::internal_node>; decltype (_S_construct(__a, __p, (forward<_Args>)(std::allocator_traits::construct::__args)...)) = <type error>]’
/usr/include/c++/4.8/bits/shared_ptr_base.h:400:38:   required from ‘std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {const std::shared_ptr<persistent_vector<int>::node>&, std::shared_ptr<persistent_vector<int>::node>}; _Tp = persistent_vector<int>::internal_node; _Alloc = std::allocator<persistent_vector<int>::internal_node>; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2u]’
/usr/include/c++/4.8/ext/new_allocator.h:120:4:   required from ‘void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::_Sp_counted_ptr_inplace<persistent_vector<int>::internal_node, std::allocator<persistent_vector<int>::internal_node>, (__gnu_cxx::_Lock_policy)2u>; _Args = {const std::allocator<persistent_vector<int>::internal_node>, const std::shared_ptr<persistent_vector<int>::node>&, std::shared_ptr<persistent_vector<int>::node>}; _Tp = std::_Sp_counted_ptr_inplace<persistent_vector<int>::internal_node, std::allocator<persistent_vector<int>::internal_node>, (__gnu_cxx::_Lock_policy)2u>]’
/usr/include/c++/4.8/bits/alloc_traits.h:254:4:   required from ‘static typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type std::allocator_traits<_Alloc>::_S_construct(_Alloc&, _Tp*, _Args&& ...) [with _Tp = std::_Sp_counted_ptr_inplace<persistent_vector<int>::internal_node, std::allocator<persistent_vector<int>::internal_node>, (__gnu_cxx::_Lock_policy)2u>; _Args = {const std::allocator<persistent_vector<int>::internal_node>, const std::shared_ptr<persistent_vector<int>::node>&, std::shared_ptr<persistent_vector<int>::node>}; _Alloc = std::allocator<std::_Sp_counted_ptr_inplace<persistent_vector<int>::internal_node, std::allocator<persistent_vector<int>::internal_node>, (__gnu_cxx::_Lock_policy)2u> >; typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type = void]’
/usr/include/c++/4.8/bits/alloc_traits.h:393:57:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/c++/4.8/bits/shared_ptr_base.h:957:35:   required from ‘std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<persistent_vector<int>::internal_node>; _Args = {const std::shared_ptr<persistent_vector<int>::node>&, std::shared_ptr<persistent_vector<int>::node>}; _Tp = persistent_vector<int>::internal_node; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2u]’
/usr/include/c++/4.8/bits/shared_ptr.h:316:64:   required from ‘std::shared_ptr<_Tp>::shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<persistent_vector<int>::internal_node>; _Args = {const std::shared_ptr<persistent_vector<int>::node>&, std::shared_ptr<persistent_vector<int>::node>}; _Tp = persistent_vector<int>::internal_node]’
/usr/include/c++/4.8/bits/shared_ptr.h:598:39:   required from ‘std::shared_ptr<_Tp1> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = persistent_vector<int>::internal_node; _Alloc = std::allocator<persistent_vector<int>::internal_node>; _Args = {const std::shared_ptr<persistent_vector<int>::node>&, std::shared_ptr<persistent_vector<int>::node>}]’
/usr/include/c++/4.8/bits/shared_ptr.h:614:42:   required from ‘std::shared_ptr<_Tp1> std::make_shared(_Args&& ...) [with _Tp = persistent_vector<int>::internal_node; _Args = {const std::shared_ptr<persistent_vector<int>::node>&, std::shared_ptr<persistent_vector<int>::node>}]’
persistent_vector.h:80:104:   required from ‘persistent_vector<T>::node_ptr persistent_vector<T>::internal_node::push_back(size_t, size_t, const T&) const [with T = int; persistent_vector<T>::node_ptr = std::shared_ptr<persistent_vector<int>::node>; size_t = long unsigned int]’
test.cpp:14:1:   required from here
/usr/include/c++/4.8/ext/new_allocator.h:120:4: error: cannot allocate an object of abstract type ‘persistent_vector<int>::internal_node’
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^
In file included from test.cpp:5:0:
persistent_vector.h:57:11: note:   since type ‘persistent_vector<int>::internal_node’ has pure virtual functions
     class internal_node : public node { 
           ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.8/bits/allocator.h:46,
                 from /usr/include/c++/4.8/string:41,
                 from /usr/include/c++/4.8/bits/locale_classes.h:40,
                 from /usr/include/c++/4.8/bits/ios_base.h:41,
                 from /usr/include/c++/4.8/ios:42,
                 from /usr/include/c++/4.8/ostream:38,
                 from /usr/include/c++/4.8/iostream:39,
                 from test.cpp:3:
/usr/include/c++/4.8/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = persistent_vector<int>::internal_node; _Args = {std::shared_ptr<persistent_vector<int>::node>, const std::shared_ptr<persistent_vector<int>::node>&}; _Tp = persistent_vector<int>::internal_node]’:
/usr/include/c++/4.8/bits/alloc_traits.h:254:4:   required from ‘static typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type std::allocator_traits<_Alloc>::_S_construct(_Alloc&, _Tp*, _Args&& ...) [with _Tp = persistent_vector<int>::internal_node; _Args = {std::shared_ptr<persistent_vector<int>::node>, const std::shared_ptr<persistent_vector<int>::node>&}; _Alloc = std::allocator<persistent_vector<int>::internal_node>; typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type = void]’
/usr/include/c++/4.8/bits/alloc_traits.h:393:57:   required from ‘static decltype (_S_construct(__a, __p, (forward<_Args>)(std::allocator_traits::construct::__args)...)) std::allocator_traits<_Alloc>::construct(_Alloc&, _Tp*, _Args&& ...) [with _Tp = persistent_vector<int>::internal_node; _Args = {std::shared_ptr<persistent_vector<int>::node>, const std::shared_ptr<persistent_vector<int>::node>&}; _Alloc = std::allocator<persistent_vector<int>::internal_node>; decltype (_S_construct(__a, __p, (forward<_Args>)(std::allocator_traits::construct::__args)...)) = <type error>]’
/usr/include/c++/4.8/bits/shared_ptr_base.h:400:38:   required from ‘std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {std::shared_ptr<persistent_vector<int>::node>, const std::shared_ptr<persistent_vector<int>::node>&}; _Tp = persistent_vector<int>::internal_node; _Alloc = std::allocator<persistent_vector<int>::internal_node>; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2u]’
/usr/include/c++/4.8/ext/new_allocator.h:120:4:   required from ‘void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::_Sp_counted_ptr_inplace<persistent_vector<int>::internal_node, std::allocator<persistent_vector<int>::internal_node>, (__gnu_cxx::_Lock_policy)2u>; _Args = {const std::allocator<persistent_vector<int>::internal_node>, std::shared_ptr<persistent_vector<int>::node>, const std::shared_ptr<persistent_vector<int>::node>&}; _Tp = std::_Sp_counted_ptr_inplace<persistent_vector<int>::internal_node, std::allocator<persistent_vector<int>::internal_node>, (__gnu_cxx::_Lock_policy)2u>]’
/usr/include/c++/4.8/bits/alloc_traits.h:254:4:   required from ‘static typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type std::allocator_traits<_Alloc>::_S_construct(_Alloc&, _Tp*, _Args&& ...) [with _Tp = std::_Sp_counted_ptr_inplace<persistent_vector<int>::internal_node, std::allocator<persistent_vector<int>::internal_node>, (__gnu_cxx::_Lock_policy)2u>; _Args = {const std::allocator<persistent_vector<int>::internal_node>, std::shared_ptr<persistent_vector<int>::node>, const std::shared_ptr<persistent_vector<int>::node>&}; _Alloc = std::allocator<std::_Sp_counted_ptr_inplace<persistent_vector<int>::internal_node, std::allocator<persistent_vector<int>::internal_node>, (__gnu_cxx::_Lock_policy)2u> >; typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type = void]’
/usr/include/c++/4.8/bits/alloc_traits.h:393:57:   [ skipping 2 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/c++/4.8/bits/shared_ptr_base.h:957:35:   required from ‘std::__shared_ptr<_Tp, _Lp>::__shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<persistent_vector<int>::internal_node>; _Args = {std::shared_ptr<persistent_vector<int>::node>, const std::shared_ptr<persistent_vector<int>::node>&}; _Tp = persistent_vector<int>::internal_node; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2u]’
/usr/include/c++/4.8/bits/shared_ptr.h:316:64:   required from ‘std::shared_ptr<_Tp>::shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<persistent_vector<int>::internal_node>; _Args = {std::shared_ptr<persistent_vector<int>::node>, const std::shared_ptr<persistent_vector<int>::node>&}; _Tp = persistent_vector<int>::internal_node]’
/usr/include/c++/4.8/bits/shared_ptr.h:598:39:   required from ‘std::shared_ptr<_Tp1> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = persistent_vector<int>::internal_node; _Alloc = std::allocator<persistent_vector<int>::internal_node>; _Args = {std::shared_ptr<persistent_vector<int>::node>, const std::shared_ptr<persistent_vector<int>::node>&}]’
/usr/include/c++/4.8/bits/shared_ptr.h:614:42:   required from ‘std::shared_ptr<_Tp1> std::make_shared(_Args&& ...) [with _Tp = persistent_vector<int>::internal_node; _Args = {std::shared_ptr<persistent_vector<int>::node>, const std::shared_ptr<persistent_vector<int>::node>&}]’
persistent_vector.h:81:101:   required from ‘persistent_vector<T>::node_ptr persistent_vector<T>::internal_node::push_back(size_t, size_t, const T&) const [with T = int; persistent_vector<T>::node_ptr = std::shared_ptr<persistent_vector<int>::node>; size_t = long unsigned int]’
test.cpp:14:1:   required from here
/usr/include/c++/4.8/ext/new_allocator.h:120:4: error: cannot allocate an object of abstract type ‘persistent_vector<int>::internal_node’
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^
In file included from test.cpp:5:0:
persistent_vector.h:57:11: note:   since type ‘persistent_vector<int>::internal_node’ has pure virtual functions
     class internal_node : public node { 
           ^
In file included from /usr/include/x86_64-linux-gnu/c++/4.8/bits/c++allocator.h:33:0,
                 from /usr/include/c++/4.8/bits/allocator.h:46,
                 from /usr/include/c++/4.8/string:41,
                 from /usr/include/c++/4.8/bits/locale_classes.h:40,
                 from /usr/include/c++/4.8/bits/ios_base.h:41,
                 from /usr/include/c++/4.8/ios:42,
                 from /usr/include/c++/4.8/ostream:38,
                 from /usr/include/c++/4.8/iostream:39,
                 from test.cpp:3:
/usr/include/c++/4.8/ext/new_allocator.h: In instantiation of ‘void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = persistent_vector<int>::internal_node; _Args = {std::shared_ptr<persistent_vector<int>::node>}; _Tp = persistent_vector<int>::internal_node]’:
/usr/include/c++/4.8/bits/alloc_traits.h:254:4:   required from ‘static typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type std::allocator_traits<_Alloc>::_S_construct(_Alloc&, _Tp*, _Args&& ...) [with _Tp = persistent_vector<int>::internal_node; _Args = {std::shared_ptr<persistent_vector<int>::node>}; _Alloc = std::allocator<persistent_vector<int>::internal_node>; typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type = void]’
/usr/include/c++/4.8/bits/alloc_traits.h:393:57:   required from ‘static decltype (_S_construct(__a, __p, (forward<_Args>)(std::allocator_traits::construct::__args)...)) std::allocator_traits<_Alloc>::construct(_Alloc&, _Tp*, _Args&& ...) [with _Tp = persistent_vector<int>::internal_node; _Args = {std::shared_ptr<persistent_vector<int>::node>}; _Alloc = std::allocator<persistent_vector<int>::internal_node>; decltype (_S_construct(__a, __p, (forward<_Args>)(std::allocator_traits::construct::__args)...)) = <type error>]’
/usr/include/c++/4.8/bits/shared_ptr_base.h:400:38:   required from ‘std::_Sp_counted_ptr_inplace<_Tp, _Alloc, _Lp>::_Sp_counted_ptr_inplace(_Alloc, _Args&& ...) [with _Args = {std::shared_ptr<persistent_vector<int>::node>}; _Tp = persistent_vector<int>::internal_node; _Alloc = std::allocator<persistent_vector<int>::internal_node>; __gnu_cxx::_Lock_policy _Lp = (__gnu_cxx::_Lock_policy)2u]’
/usr/include/c++/4.8/ext/new_allocator.h:120:4:   required from ‘void __gnu_cxx::new_allocator<_Tp>::construct(_Up*, _Args&& ...) [with _Up = std::_Sp_counted_ptr_inplace<persistent_vector<int>::internal_node, std::allocator<persistent_vector<int>::internal_node>, (__gnu_cxx::_Lock_policy)2u>; _Args = {const std::allocator<persistent_vector<int>::internal_node>, std::shared_ptr<persistent_vector<int>::node>}; _Tp = std::_Sp_counted_ptr_inplace<persistent_vector<int>::internal_node, std::allocator<persistent_vector<int>::internal_node>, (__gnu_cxx::_Lock_policy)2u>]’
/usr/include/c++/4.8/bits/alloc_traits.h:254:4:   required from ‘static typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type std::allocator_traits<_Alloc>::_S_construct(_Alloc&, _Tp*, _Args&& ...) [with _Tp = std::_Sp_counted_ptr_inplace<persistent_vector<int>::internal_node, std::allocator<persistent_vector<int>::internal_node>, (__gnu_cxx::_Lock_policy)2u>; _Args = {const std::allocator<persistent_vector<int>::internal_node>, std::shared_ptr<persistent_vector<int>::node>}; _Alloc = std::allocator<std::_Sp_counted_ptr_inplace<persistent_vector<int>::internal_node, std::allocator<persistent_vector<int>::internal_node>, (__gnu_cxx::_Lock_policy)2u> >; typename std::enable_if<std::allocator_traits<_Alloc>::__construct_helper<_Tp, _Args>::value, void>::type = void]’
/usr/include/c++/4.8/bits/alloc_traits.h:393:57:   [ skipping 3 instantiation contexts, use -ftemplate-backtrace-limit=0 to disable ]
/usr/include/c++/4.8/bits/shared_ptr.h:316:64:   required from ‘std::shared_ptr<_Tp>::shared_ptr(std::_Sp_make_shared_tag, const _Alloc&, _Args&& ...) [with _Alloc = std::allocator<persistent_vector<int>::internal_node>; _Args = {std::shared_ptr<persistent_vector<int>::node>}; _Tp = persistent_vector<int>::internal_node]’
/usr/include/c++/4.8/bits/shared_ptr.h:598:39:   required from ‘std::shared_ptr<_Tp1> std::allocate_shared(const _Alloc&, _Args&& ...) [with _Tp = persistent_vector<int>::internal_node; _Alloc = std::allocator<persistent_vector<int>::internal_node>; _Args = {std::shared_ptr<persistent_vector<int>::node>}]’
/usr/include/c++/4.8/bits/shared_ptr.h:614:42:   required from ‘std::shared_ptr<_Tp1> std::make_shared(_Args&& ...) [with _Tp = persistent_vector<int>::internal_node; _Args = {std::shared_ptr<persistent_vector<int>::node>}]’
persistent_vector.h:54:74:   required from ‘static persistent_vector<T>::node_ptr persistent_vector<T>::make_chain(size_t, const T&) [with T = int; persistent_vector<T>::node_ptr = std::shared_ptr<persistent_vector<int>::node>; size_t = long unsigned int]’
persistent_vector.h:80:102:   required from ‘persistent_vector<T>::node_ptr persistent_vector<T>::internal_node::push_back(size_t, size_t, const T&) const [with T = int; persistent_vector<T>::node_ptr = std::shared_ptr<persistent_vector<int>::node>; size_t = long unsigned int]’
test.cpp:14:1:   required from here
/usr/include/c++/4.8/ext/new_allocator.h:120:4: error: cannot allocate an object of abstract type ‘persistent_vector<int>::internal_node’
  { ::new((void *)__p) _Up(std::forward<_Args>(__args)...); }
    ^
In file included from test.cpp:5:0:
persistent_vector.h:57:11: note:   since type ‘persistent_vector<int>::internal_node’ has pure virtual functions
     class internal_node : public node { 
           ^
